<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:OracleCodeGenerator">

    <!--页面背景-->
    <SolidColorBrush x:Key="BlueThemePageBackground" Color="#FFD8EEFB"/>

    <!--直角TextBox样式-->
    <SolidColorBrush x:Key="GreenThemeTextBox.Static.Border" Color="#FFABAdB3"/>
    <SolidColorBrush x:Key="GreenThemeTextBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="GreenThemeTextBox.Focus.Border" Color="#FF569DE5"/>

    <SolidColorBrush x:Key="BlueTheme.Control.UnEnabled.Background" Color="#FFD8D9DE"/>

    <Color x:Key="BlueTheme.ButtonSubmitColor.Normal" A="255" R="0" G="176" B="3"/>
    <Color x:Key="BlueTheme.ButtonSubmitColor.MouseOver" A="255" R="36" G="114" B="22"/>
    <Color x:Key="BlueTheme.ButtonSubmitColor.Pressed" A="255" R="50" G="214" B="53"/>
    <Color x:Key="BlueTheme.ButtonCancelColor.Normal" A="255" R="65" G="146" B="211"/>
    <Color x:Key="BlueTheme.ButtonCancelColor.MouseOver" A="255" R="33" G="97" B="149"/>
    <Color x:Key="BlueTheme.ButtonCancelColor.Pressed" A="255" R="39" G="145" B="230"/>

    
    
    <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5,8,0,8"/>
    </Style>

    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="Margin" Value="0,20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Height}">
                            <Rectangle x:Name="CheckBoxRectangle" Fill="LightSkyBlue" Opacity="0.3" RadiusY="5" RadiusX="5"/>
                            <Rectangle x:Name="CheckBoxRectangleOut" Stroke="#FF06DAD1" StrokeThickness="1" RadiusY="5" RadiusX="5"/>
                            <Grid x:Name="CheckedMark" Width="20" Height="20" Visibility="Collapsed">
                                <Path SnapsToDevicePixels="False" StrokeThickness="3" Data="M1,9 L10,17" Stroke="White"/>
                                <Path SnapsToDevicePixels="False" StrokeThickness="3" Data="M8,17 L20,4" Stroke="White"/>
                            </Grid>
                        </Grid>
                        <TextBlock Grid.Column="1" Text="{TemplateBinding Content}" FontSize="16" Foreground="#00C403" VerticalAlignment="Center" Margin="14,0,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckedMark" Property="Visibility" Value="Visible"></Setter>
                            <Setter TargetName="CheckBoxRectangle" Property="Fill" Value="#FF00A8E0"></Setter>
                            <Setter TargetName="CheckBoxRectangle" Property="Opacity" Value="1"></Setter>
                            <Setter TargetName="CheckBoxRectangleOut" Property="Stroke" Value="Transparent"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="28"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GreenThemeTextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="微软雅黑,宋体"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource BlueTheme.Control.UnEnabled.Background}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FFC5CACF"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FFD3FFB5"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource GreenThemeTextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FFD3FFB5"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource GreenThemeTextBox.Focus.Border}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsReadOnly" Value="true"/>
                                <Condition Property="IsKeyboardFocused" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="#FFC5CACF"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsReadOnly" Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="#FFC5CACF"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyleForSumbit" TargetType="{x:Type Button}">
        <Setter Property="Width"  Value="100"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="grid"  CornerRadius="3">
                        <Border.Background>
                            <SolidColorBrush x:Name="borderBrush" Color="{StaticResource BlueTheme.ButtonSubmitColor.Normal}"/>
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Color" Storyboard.TargetName="borderBrush">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource BlueTheme.ButtonSubmitColor.Normal}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Color" Storyboard.TargetName="borderBrush">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource BlueTheme.ButtonSubmitColor.MouseOver}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Color" Storyboard.TargetName="borderBrush">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource BlueTheme.ButtonSubmitColor.Pressed}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Color" Storyboard.TargetName="borderBrush">
                                            <EasingColorKeyFrame KeyTime="0" Value="Gray"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter HorizontalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="White"/>
        <!--<Setter Property="Background" Value="#FF3DB6CF"/>-->
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ButtonStyleForCancel" TargetType="{x:Type Button}">
        <Setter Property="Width"  Value="100"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="grid"  CornerRadius="2">
                        <Border.Background>
                            <SolidColorBrush x:Name="borderBrush" Color="{StaticResource BlueTheme.ButtonCancelColor.Normal}"/>
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Color" Storyboard.TargetName="borderBrush">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource BlueTheme.ButtonCancelColor.Normal}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Color" Storyboard.TargetName="borderBrush">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource BlueTheme.ButtonCancelColor.MouseOver}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Color" Storyboard.TargetName="borderBrush">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource BlueTheme.ButtonCancelColor.Pressed}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Color" Storyboard.TargetName="borderBrush">
                                            <EasingColorKeyFrame KeyTime="0" Value="Gray"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter HorizontalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <SolidColorBrush x:Key="BlueThemeBordBursh" Color="#FF2483D3"/>
    <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource BlueThemeBordBursh}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0"/>
    </Style>

    <!--竖线-->
    <Style x:Key="VerLineStyle" TargetType="{x:Type Line}">
        <Setter Property="Stroke" Value="{StaticResource BlueThemeBordBursh}"/>
        <Setter Property="StrokeThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="X1" Value="0"/>
        <Setter Property="Y1" Value="0"/>
        <Setter Property="X2" Value="0"/>
        <Setter Property="Y2" Value="1"/>
        <Setter Property="Stretch" Value="Fill"/>
    </Style>
    <!--横线-->
    <Style x:Key="HorLineStyle" TargetType="{x:Type Line}">
        <Setter Property="Stroke" Value="{StaticResource BlueThemeBordBursh}"/>
        <Setter Property="StrokeThickness" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="X1" Value="0"/>
        <Setter Property="Y1" Value="0"/>
        <Setter Property="X2" Value="1"/>
        <Setter Property="Y2" Value="0"/>
        <Setter Property="Stretch" Value="Fill"/>
    </Style>
   
    <!--DataGrid题头背景色-->
    <SolidColorBrush x:Key="BlueTheme.DataGridColumnHeader.Background" Color="#FF4594D2"/>
    <Color x:Key="BlueTheme.DataGridRow.Pressed" A="255" R="0" G="111" B="255"/>
    <Color x:Key="BlueTheme.DataGridRow.UnFocused_Selected.Background">#FFF3F1F1</Color>
    <SolidColorBrush x:Key="BlueTheme.ScrollBarThumb.Background" Color="#FF1D70E8"/>
    <SolidColorBrush x:Key="BlueTheme.DataGridRow.Background" Color="#F6FDF6"/>
    <SolidColorBrush x:Key="BlueTheme.BlueForground" Color="#FF0164B4"/>
    <Color x:Key="BlueTheme.BlueForground.Color">#FF0164B4</Color>
    <!--DataGridColumnHeader样式-->
    <Style x:Key="GreenThemeDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinHeight" Value="35" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid>
                            <Border BorderBrush="#DDDDDD" BorderThickness="0.55,0,0,0"/>
                            <Border BorderBrush="{StaticResource BlueThemeBordBursh}" Background="{StaticResource BlueTheme.DataGridColumnHeader.Background}" BorderThickness="1,2,1,2"/>
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        </Grid>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left">
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="Width" Value="8"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Cursor" Value="SizeWE"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right">
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="Width" Value="8"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Cursor" Value="SizeWE"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--DataGridRow样式-->
    <Style x:Key="GreenThemeDataGridRowxStyle" TargetType="{x:Type DataGridRow}">

        <Style.Resources>
            <!--SelectedItem with focus-->
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{StaticResource BlueTheme.DataGridRow.Pressed}" Opacity="1"/>
            <!--SelectedItem without focus-->
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="{StaticResource BlueTheme.DataGridRow.UnFocused_Selected.Background}" Opacity="1" />
            <!--SelectedItem with focus foreground-->
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="White" Opacity="1" />
            <!--SelectedItem without focus foreground-->
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="{StaticResource BlueTheme.BlueForground.Color}" Opacity="1" />
        </Style.Resources>

        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{StaticResource BlueTheme.BlueForground}"/>
    </Style>
    <!--DataGridCellStyle样式-->
    <Style x:Key="GreenThemeDataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid},Path=HorizontalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--DataGrid样式-->
    <Style x:Key="GreenThemeDataGridStyle" TargetType="{x:Type DataGrid}">
        <!--<EventSetter Event="DataGridCell.GotFocus" Handler="CellGotFocus" />-->
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="White" Opacity="1" />
            <!--滑块-->
            <Style x:Key="GTScrollBarThumb"     
				TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle"  
					Value="true"/>
                <Setter Property="IsTabStop"  
					Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid>
                                <Rectangle  
									Fill="{StaticResource BlueTheme.ScrollBarThumb.Background}"  
									RadiusX="0"  
									RadiusY="0"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HorizontalScrollBarPageButton"  
				TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle"  
					Value="true"/>
                <Setter Property="Background"  
					Value="#FFFFFF"/>
                <Setter Property="Focusable"  
					Value="false"/>
                <Setter Property="IsTabStop"  
					Value="false"/>
                <Setter Property="Opacity"  
					Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="{TemplateBinding Background}"  
								Width="{TemplateBinding Width}"  
								Height="{TemplateBinding Height}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="VerticalScrollBarPageButton"  
				TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle"  
					Value="true"/>
                <Setter Property="Background"  
					Value="#FFFFFF"/>
                <Setter Property="Focusable"  
					Value="false"/>
                <Setter Property="IsTabStop"  
					Value="false"/>
                <Setter Property="Opacity"  
					Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="{TemplateBinding Background}"  
								Width="{TemplateBinding Width}"  
								Height="{TemplateBinding Height}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type ScrollBar}">

                <Setter Property="Stylus.IsPressAndHoldEnabled"  
					Value="false"/>
                <Setter Property="Stylus.IsFlicksEnabled"  
					Value="false"/>
                <Setter Property="Background"  
					Value="#FFFFFF"/>
                <Setter Property="Margin"  
					Value="0,1,1,6"/>

                <Setter Property="Width"  
					Value="5"/>
                <Setter Property="MinWidth"  
					Value="5"/>
                <Setter Property="Opacity"  
					Value="0.8"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track"  
									IsEnabled="{TemplateBinding IsMouseOver}"  
									IsDirectionReversed="true">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton  
											Style="{StaticResource VerticalScrollBarPageButton}"  
											Command="{x:Static ScrollBar.PageUpCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton  
											Style="{StaticResource VerticalScrollBarPageButton}"  
											Command="{x:Static ScrollBar.PageDownCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource GTScrollBarThumb}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation"  
						Value="Horizontal">
                        <Setter Property="Background"  
							Value="#FFFFFF"/>
                        <Setter Property="Margin"  
							Value="1,0,6,1"/>
                        <Setter Property="Height"  
							Value="15"/>
                        <Setter Property="MinHeight"  
							Value="15"/>
                        <Setter Property="Width"  
							Value="Auto"/>
                        <Setter Property="Opacity"  
							Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                        <Track x:Name="PART_Track"  
											IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"  
													Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"  
													Command="{x:Static ScrollBar.PageRightCommand}"/>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Style="{StaticResource GTScrollBarThumb}"/>
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Orientation"  
						Value="Vertical">
                        <Setter Property="Background"  
							Value="Transparent"/>
                        <Setter Property="Margin"  
							Value="0,1,0,0"/>
                        <Setter Property="Height"  
							Value="Auto"/>
                        <Setter Property="MinWidth"  
							Value="15"/>
                        <Setter Property="Width"  
							Value="15"/>
                        <Setter Property="Opacity"  
							Value="0.8"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
        <Setter Property="BorderThickness" Value="1,0,1,1" />
        <Setter Property="BorderBrush" Value="{StaticResource BlueThemeBordBursh}"/>
        <Setter Property="CanUserSortColumns" Value="True" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="RowBackground" Value="{StaticResource BlueTheme.DataGridRow.Background}"/>
        <!--<Setter Property="AlternatingRowBackground" Value="#F6FDF6" />-->
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource BlueThemeBordBursh}"/>
        <Setter Property="VerticalGridLinesBrush" Value="#DDDDDD"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="GridLinesVisibility" Value="All" />
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource GreenThemeDataGridColumnHeaderStyle}"/>
        <Setter Property="RowStyle" Value="{StaticResource GreenThemeDataGridRowxStyle}"/>
        <Setter Property="CellStyle" Value="{StaticResource GreenThemeDataGridCellStyle}" />
        <!--==========================DataGrid样式========================== -->
    </Style>

    <Style x:Key="GreenThemeScrollBarThumb"  
		TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"  
			Value="true"/>
        <Setter Property="IsTabStop"  
			Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Rectangle  
							Fill="{StaticResource BlueTheme.ScrollBarThumb.Background}"  
							RadiusX="1"  
							RadiusY="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GTHorizontalScrollBarPageButton"  
		TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"  
			Value="true"/>
        <Setter Property="Background"  
			Value="Transparent"/>
        <Setter Property="Focusable"  
			Value="false"/>
        <Setter Property="IsTabStop"  
			Value="false"/>
        <Setter Property="Opacity"  
			Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"  
						Width="{TemplateBinding Width}"  
						Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GTVerticalScrollBarPageButton"  
		TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"  
			Value="true"/>
        <Setter Property="Background"  
			Value="Transparent"/>
        <Setter Property="Focusable"  
			Value="false"/>
        <Setter Property="IsTabStop"  
			Value="false"/>
        <Setter Property="Opacity"  
			Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"  
						Width="{TemplateBinding Width}"  
						Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="GreenThemeScrollbar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"  
			Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled"  
			Value="false"/>
        <Setter Property="Background"  
			Value="Transparent"/>
        <Setter Property="Margin"  
			Value="0,1,1,6"/>
        <Setter Property="Width"  
			Value="5"/>
        <Setter Property="MinWidth"  
			Value="5"/>
        <Setter Property="Opacity"  
			Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Track x:Name="PART_Track"  
							IsEnabled="{TemplateBinding IsMouseOver}"  
							IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton  
									Style="{StaticResource GTVerticalScrollBarPageButton}"  
									Command="{x:Static ScrollBar.PageUpCommand}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton  
									Style="{StaticResource GTVerticalScrollBarPageButton}"  
									Command="{x:Static ScrollBar.PageDownCommand}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource GreenThemeScrollBarThumb}"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"  
				Value="Horizontal">
                <Setter Property="Background"  
					Value="Transparent"/>
                <Setter Property="Margin"  
					Value="1,0,6,1"/>
                <Setter Property="Height"  
					Value="15"/>
                <Setter Property="MinHeight"  
					Value="15"/>
                <Setter Property="Width"  
					Value="Auto"/>
                <Setter Property="Opacity"  
					Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track"  
									IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource GTHorizontalScrollBarPageButton}"  
											Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource GTHorizontalScrollBarPageButton}"  
											Command="{x:Static ScrollBar.PageRightCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource GreenThemeScrollBarThumb}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Orientation"  
				Value="Vertical">
                <Setter Property="Background"  
					Value="Transparent"/>
                <Setter Property="Margin"  
					Value="0,0,1.5,0"/>
                <Setter Property="Height"  
					Value="Auto"/>
                <Setter Property="MinWidth"  
					Value="13"/>
                <Setter Property="Width"  
					Value="13"/>
                <Setter Property="Opacity"  
					Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style  
		TargetType="{x:Type ScrollViewer}">
        <Setter Property="BorderBrush"  
			Value="LightGray"/>
        <Setter Property="BorderThickness"  
			Value="0"/>
        <Setter Property="HorizontalContentAlignment"  
			Value="Left"/>
        <Setter Property="HorizontalScrollBarVisibility"  
			Value="Auto"/>
        <Setter Property="VerticalContentAlignment"  
			Value="Top"/>
        <Setter Property="VerticalScrollBarVisibility"  
			Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"  
						BorderThickness="{TemplateBinding BorderThickness}"  
						SnapsToDevicePixels="True">
                        <Grid Background="{TemplateBinding Background}">
                            <ScrollContentPresenter  
								Cursor="{TemplateBinding Cursor}"  
								Margin="{TemplateBinding Padding}"  
								ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar"  
								HorizontalAlignment="Right"  
								Maximum="{TemplateBinding ScrollableHeight}"  
								Orientation="Vertical"  
								Style="{StaticResource GreenThemeScrollbar}"  
								ViewportSize="{TemplateBinding ViewportHeight}"  
								Value="{TemplateBinding VerticalOffset}"  
								Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"  
								Maximum="{TemplateBinding ScrollableWidth}"  
								Orientation="Horizontal"  
								Style="{StaticResource GreenThemeScrollbar}"  
								VerticalAlignment="Bottom"  
								Value="{TemplateBinding HorizontalOffset}"  
								ViewportSize="{TemplateBinding ViewportWidth}"  
								Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ScrollViewer.ScrollChanged">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation  
										Storyboard.TargetName="PART_VerticalScrollBar"  
										Storyboard.TargetProperty="Opacity"  
										To="0.8"  
										Duration="0:0:1"/>
                                    <DoubleAnimation  
										Storyboard.TargetName="PART_VerticalScrollBar"  
										Storyboard.TargetProperty="Opacity"  
										To="0.7"  
										Duration="0:0:1"  
										BeginTime="0:0:1"/>
                                    <DoubleAnimation  
										Storyboard.TargetName="PART_HorizontalScrollBar"  
										Storyboard.TargetProperty="Opacity"  
										To="1"  
										Duration="0:0:1"/>
                                    <DoubleAnimation  
										Storyboard.TargetName="PART_HorizontalScrollBar"  
										Storyboard.TargetProperty="Opacity"  
										To="0.7"  
										Duration="0:0:1"  
										BeginTime="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseEnter"  
							SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation  
										Storyboard.TargetName="PART_VerticalScrollBar"  
										Storyboard.TargetProperty="Opacity"  
										To="0.8"  
										Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseLeave"  
							SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation  
										Storyboard.TargetName="PART_VerticalScrollBar"  
										Storyboard.TargetProperty="Opacity"  
										To="0.7"  
										Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseEnter"  
							SourceName="PART_HorizontalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation  
										Storyboard.TargetName="PART_HorizontalScrollBar"  
										Storyboard.TargetProperty="Opacity"  
										To="1"  
										Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseLeave"  
							SourceName="PART_HorizontalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation  
										Storyboard.TargetName="PART_HorizontalScrollBar"  
										Storyboard.TargetProperty="Opacity"  
										To="0.7"  
										Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--<Style x:Key="TreeViewStyle" TargetType="{x:Type TreeView}">
        <Setter Property="BorderBrush" Value="{StaticResource BlueThemeBordBursh}"/>
        <Setter Property="BorderThickness" Value="1"/>        
        <Setter Property="Background" Value="#F6FDF6"/>        
    </Style>-->
</ResourceDictionary>